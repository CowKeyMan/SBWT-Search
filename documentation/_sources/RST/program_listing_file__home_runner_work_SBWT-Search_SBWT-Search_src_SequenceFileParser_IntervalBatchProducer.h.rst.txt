
.. _program_listing_file__home_runner_work_SBWT-Search_SBWT-Search_src_SequenceFileParser_IntervalBatchProducer.h:

Program Listing for File IntervalBatchProducer.h
================================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_SBWT-Search_SBWT-Search_src_SequenceFileParser_IntervalBatchProducer.h>` (``/home/runner/work/SBWT-Search/SBWT-Search/src/SequenceFileParser/IntervalBatchProducer.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef INTERVAL_BATCH_PRODUCER_H
   #define INTERVAL_BATCH_PRODUCER_H
   
   #include <memory>
   
   #include "BatchObjects/IntervalBatch.h"
   #include "Tools/SharedBatchesProducer.hpp"
   #include "Tools/TypeDefinitions.h"
   
   namespace sbwt_search {
   
   class ContinuousSequenceFileParser;
   
   using design_utils::SharedBatchesProducer;
   using std::shared_ptr;
   
   class IntervalBatchProducer: public SharedBatchesProducer<IntervalBatch> {
     friend ContinuousSequenceFileParser;
   
   public:
     explicit IntervalBatchProducer(u64 max_batches);
   
     auto static get_bits_per_seq() -> u64;
   
   private:
     auto add_file_start(size_t newlines) -> void;
     auto do_at_batch_start() -> void override;
     auto do_at_batch_finish() -> void override;
     auto get_default_value() -> shared_ptr<IntervalBatch> override;
     auto set_chars_before_newline(const vector<size_t> &chars_before_newline)
       -> void;
   };
   
   }  // namespace sbwt_search
   
   #endif
